name: Amazon Discount Finder

on:
  schedule:
    # 1時間に一回実行
    - cron: '0 0/1 * * *'
  workflow_dispatch:
    # 手動実行用のトリガー

jobs:
  find-discounts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 完全な履歴を取得（より安定したpushのため）
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Check file structure
        run: |
          echo "現在のディレクトリ構造:"
          ls -la
          echo "Pythonスクリプトの確認:"
          if [ -f "amazon_discount_finder.py" ]; then
            echo "amazon_discount_finder.py が存在します"
          else
            echo "エラー: amazon_discount_finder.py が見つかりません"
            exit 1
          fi
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txtが見つからないため、個別にインストールします"
            pip install python-dotenv requests tweepy pandas
          fi
          # インストールされたパッケージの確認
          pip list
      
      - name: Create initial files if not exist
        run: |
          if [ ! -f "discount_results.json" ]; then
            echo "[]" > discount_results.json
            echo "初期ファイルを作成しました"
          fi
          if [ ! -f "search_config.json" ]; then
            echo '{
              "min_discount_percent": 25,
              "search_items": [
                {"category": "Electronics", "keyword": "セール"},
                {"category": "HomeAndKitchen", "keyword": "特価"},
                {"category": "VideoGames", "keyword": "割引"},
                {"category": "Beauty", "keyword": "お買い得"},
                {"category": "Fashion", "keyword": "価格"}
              ]
            }' > search_config.json
            echo "検索設定ファイルを作成しました"
          fi
      
      - name: Run discount finder
        env:
          # Amazon PA-API 設定
          PA_API_KEY: ${{ secrets.PA_API_KEY }}
          PA_API_SECRET: ${{ secrets.PA_API_SECRET }}
          PARTNER_TAG: ${{ secrets.PARTNER_TAG }}
          # Twitter API 設定
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          # Threads API 設定
          THREADS_APP_ID: ${{ secrets.THREADS_APP_ID }}
          THREADS_APP_SECRET: ${{ secrets.THREADS_APP_SECRET }}
          THREADS_LONG_LIVED_TOKEN: ${{ secrets.THREADS_LONG_LIVED_TOKEN }}
          THREADS_INSTAGRAM_ACCOUNT_ID: ${{ secrets.THREADS_INSTAGRAM_ACCOUNT_ID }}
        run: |
          # 環境変数の確認（シークレット値は表示しない）
          echo "環境変数チェック:"
          if [ -n "$PA_API_KEY" ]; then echo "PA_API_KEY: 設定済み"; else echo "警告: PA_API_KEY が設定されていません"; fi
          if [ -n "$PA_API_SECRET" ]; then echo "PA_API_SECRET: 設定済み"; else echo "警告: PA_API_SECRET が設定されていません"; fi
          if [ -n "$PARTNER_TAG" ]; then echo "PARTNER_TAG: 設定済み"; else echo "警告: PARTNER_TAG が設定されていません"; fi
          
          # 実行時のエラーをより詳細に表示
          set -x
          
          # スクリプトの実行権限を確認
          chmod +x amazon_discount_finder.py
          
          # スクリプト実行（Pythonを明示的にパスで指定）
          python3 amazon_discount_finder.py || {
            echo "::warning::スクリプト実行中にエラーが発生しましたが、処理を継続します"
            # エラーの詳細が見られるようにログファイルをキャプチャ
            if [ -f "discount_finder.log" ]; then
              echo "::group::エラーログ"
              cat discount_finder.log
              echo "::endgroup::"
            else
              echo "エラーログファイルが見つかりません"
            fi
          }
      
      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          # 追跡対象ファイルの確認（存在するファイルのみ追加）
          FILES_TO_COMMIT=""
          if [ -f "discount_results.json" ]; then
            FILES_TO_COMMIT="${FILES_TO_COMMIT} discount_results.json"
          fi
          if [ -f "discount_finder.log" ]; then
            FILES_TO_COMMIT="${FILES_TO_COMMIT} discount_finder.log"
          fi
          # ファイルが存在する場合のみgit addを実行
          if [ -n "${FILES_TO_COMMIT}" ]; then
            git add ${FILES_TO_COMMIT}
            # 変更がある場合のみコミットとプッシュ
            if git diff --staged --quiet; then
              echo "変更はありません"
            else
              git commit -m "Update discount results [automated]"
              git push origin HEAD:${GITHUB_REF#refs/heads/}
            fi
          else
            echo "コミット対象のファイルが見つかりません"
          fi
